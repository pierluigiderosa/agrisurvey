# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-08 14:29
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agricoltore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('luogoNascita', models.CharField(max_length=100, verbose_name='luogo di nascita')),
                ('dataNascita', models.DateField(blank=True, null=True, verbose_name='data di nascita')),
                ('viaResidenza', models.CharField(max_length=100, verbose_name='via')),
                ('ComuneRes', models.CharField(default='', max_length=50, verbose_name='Comune di residenza')),
                ('telefono', models.CharField(blank=True, default='', max_length=50)),
                ('CF', models.CharField(default='', max_length=50)),
                ('PIva', models.CharField(default='', max_length=255, verbose_name='P. IVA')),
                ('Referente', models.CharField(blank=True, default='', max_length=255)),
                ('RefTel', models.CharField(blank=True, default='', max_length=255, verbose_name='Tel: referente')),
                ('azNome', models.CharField(blank=True, default='', max_length=255, verbose_name='Nome azienda')),
                ('azLoc', models.CharField(blank=True, default='', max_length=255, verbose_name='Localit\xe0')),
                ('azComune', models.CharField(blank=True, default='', max_length=255, verbose_name='Comune Azienda')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agricoltore',
                'verbose_name_plural': 'Agricoltori',
            },
        ),
        migrations.CreateModel(
            name='catastale_new',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part', models.CharField(max_length=5)),
                ('foglio', models.CharField(max_length=8)),
                ('comune', models.CharField(max_length=25)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=3003)),
            ],
            options={
                'verbose_name': 'catastale',
                'verbose_name_plural': 'catastali',
            },
        ),
        migrations.CreateModel(
            name='CatastaleSmall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part', models.CharField(max_length=5)),
                ('sub', models.CharField(max_length=5)),
                ('foglio', models.CharField(max_length=8)),
                ('idseq', models.BigIntegerField()),
                ('comune', models.CharField(default='', max_length=250)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name': 'catastale_v',
                'verbose_name_plural': 'catastali_v',
            },
        ),
        migrations.CreateModel(
            name='danno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foglio', models.CharField(blank=True, default='', help_text='<b>Attenzione</b> da inserire solo nel caso in cui non si ritrova il catastale nel campo in fondo alla pagina', max_length=50, null=True, verbose_name='Fogli colpiti da danno')),
                ('particella', models.CharField(blank=True, default='', help_text='<b>Attenzione</b> da inserire solo nel caso in cui non si ritrova il catastale nel campo in fondo alla pagina', max_length=50, null=True)),
                ('coltura', models.CharField(default='', max_length=50)),
                ('varieta', models.CharField(blank=True, max_length=50, verbose_name='variet\xe0 colturale')),
                ('SumTot', models.FloatField(default=0, verbose_name='Superficie totale particelle ettari')),
                ('SumSem', models.FloatField(default=0, verbose_name='Superficie seminativa particella ettari')),
                ('PercDanno', models.IntegerField(default=0, help_text='valore compreso tra 0 e 100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% stimata del danno')),
                ('Produzione', models.BigIntegerField(default=0, verbose_name='produzione prevista nella particella')),
                ('PerProdPersa', models.BigIntegerField(default=0, help_text='valore compreso tra 0 e 100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='% produzione persa')),
                ('ValoreDanno', models.BigIntegerField(default=0, verbose_name='ipotetico valore del danno stimato dal dichiarante')),
                ('NumPianteDan', models.BigIntegerField(blank=True, default=0, verbose_name='numero piante danneggiate')),
                ('TipoPiante', models.CharField(blank=True, max_length=50)),
                ('SelvagginaSem', models.CharField(default='', max_length=250, verbose_name='Selvaggina che ha fatto i danni alla coltura')),
                ('OpereProtezione', models.CharField(blank=True, max_length=250)),
                ('data_ins', models.DateField(auto_now_add=True, verbose_name='Data inserimento')),
                ('note', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Note (facoltativo)')),
                ('stato_pratica', models.CharField(choices=[('lavorazione', 'In lavorazione'), ('rilievo', 'In rilievo'), ('completa', 'Completa')], default='lavorazione', max_length=20)),
                ('mappale', models.FileField(blank=True, help_text='file pdf', upload_to='mappali/')),
                ('CAA', models.ForeignKey(blank=True, help_text='Centro di Assistenza agricolo', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('Rilevatore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('fog_part_certified', models.ManyToManyField(help_text='aiuto', to='domanda.CatastaleSmall', verbose_name='Foglio Particella da Catastale')),
                ('fog_part_db', models.ManyToManyField(help_text='Inserire nel formato Comune foglio e particella del tipo : -<b>Empoli 0600 317</b>- dove 0600 \xe8 il foglio e 317 la particella', to='domanda.catastale_new', verbose_name='Foglio Particella da Catastale')),
                ('richiedente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'danno',
                'verbose_name_plural': 'danni',
            },
        ),
        migrations.CreateModel(
            name='quadranti',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.FloatField()),
                ('left', models.FloatField()),
                ('top', models.FloatField()),
                ('right', models.FloatField()),
                ('bottom', models.FloatField()),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=3003)),
            ],
        ),
    ]
